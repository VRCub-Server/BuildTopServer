{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config.ts"],"sourcesContent":["\n// 重要提示：请将这些值替换为您的真实 App ID 和 App Key\n// 并且强烈建议将它们存储在环境变量中，而不是硬编码在代码里。\nexport const APP_ID = process.env.NEXT_PUBLIC_APP_ID || '1152';\nexport const APP_KEY = process.env.NEXT_PUBLIC_APP_KEY || '9b8011704126a18d76ca4868c30f73af';\n\nexport const API_BASE_URL = 'https://login.shw1.com';\n\n// 定义支持的登录方式及其显示名称\nexport const LOGIN_PROVIDERS = [\n  { type: 'qq', name: 'QQ' },\n  { type: 'wx', name: '微信' },\n  // { type: 'alipay', name: '支付宝' }, // Removed\n  // { type: 'sina', name: '微博' },   // Removed\n  // { type: 'baidu', name: '百度' },  // Removed\n  // 根据需要添加更多提供商\n  // { type: 'google', name: '谷歌' },\n  // { type: 'microsoft', name: '微软' },\n];\n\nexport const SESSION_COOKIE_NAME = 'userSession';\n"],"names":[],"mappings":"AACA,qCAAqC;AACrC,gCAAgC;;;;;;;;AACzB,MAAM,SAAS,QAAQ,GAAG,CAAC,kBAAkB,IAAI;AACjD,MAAM,UAAU,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAEnD,MAAM,eAAe;AAGrB,MAAM,kBAAkB;IAC7B;QAAE,MAAM;QAAM,MAAM;IAAK;IACzB;QAAE,MAAM;QAAM,MAAM;IAAK;CAO1B;AAEM,MAAM,sBAAsB","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/data/buildings.ts"],"sourcesContent":["\nimport type { Building } from '@/types';\n\nexport const mockBuildings: Building[] = [\n  {\n    id: '1',\n    name: '天空之城拉普达',\n    author: '建筑大师A',\n    authorSocialUid: 'user_A_social_uid', // Example submitter\n    description: '一座漂浮在云层之上的宏伟城堡，灵感来源于经典动画。拥有复杂的花园和神秘的内部结构。',\n    imageUrl: 'https://placehold.co/800x600.png',\n    aiHint: 'minecraft castle sky',\n    votes: 120,\n    size: '大型',\n    dimensions: { x: 100, y: 60, z: 100 },\n    territoryIdentifier: 'SkyLaputa',\n    server: 'Survival-1',\n    coordinates: { x: 123, y: 150, z: -456 },\n    eventEdition: 23,\n    eventYear: 2023,\n    status: '有效',\n    competitionId: 'comp1', // 2023年度建筑节 (已结束)\n    submissionDate: '2023-01-15T10:00:00Z',\n  },\n  {\n    id: '2',\n    name: '像素风现代都市',\n    author: '像素艺术家B',\n    authorSocialUid: 'user_B_social_uid',\n    description: '用方块精心构建的繁华都市景观，包含摩天大楼、公园和交通系统，细节惊人。',\n    imageUrl: 'https://placehold.co/800x600.png',\n    aiHint: 'minecraft city pixel',\n    votes: 95,\n    size: '大型',\n    dimensions: { x: 120, y: 70, z: 120 },\n    territoryIdentifier: 'PixelMetropolis',\n    server: 'Survival-2',\n    coordinates: { x: 789, y: 64, z: 101 },\n    eventEdition: 23,\n    eventYear: 2023,\n    status: '等待审核',\n    competitionId: 'comp1', // 2023年度建筑节 (已结束)\n    submissionDate: '2023-02-10T10:00:00Z',\n  },\n  {\n    id: '3',\n    name: '幽暗密林神殿',\n    author: '探险家C',\n    authorSocialUid: 'user_C_social_uid',\n    description: '隐藏在茂密丛林深处的古老神殿，充满了谜题和机关，散发着神秘的气息。',\n    imageUrl: 'https://placehold.co/800x600.png',\n    aiHint: 'minecraft temple jungle',\n    votes: 158,\n    size: '中型',\n    dimensions: { x: 50, y: 30, z: 50 },\n    territoryIdentifier: 'JungleSanctum',\n    server: 'Survival-1',\n    coordinates: { x: -200, y: 70, z: 350 },\n    eventEdition: 24,\n    eventYear: 2024,\n    status: '有效',\n    competitionId: 'comp2', // 2024夏季创意赛 (进行中)\n    submissionDate: '2024-06-05T10:00:00Z',\n  },\n  {\n    id: '4',\n    name: '海底水晶宫殿',\n    author: '海洋工程师D',\n    authorSocialUid: 'user_D_social_uid',\n    description: '一座完全由水晶和发光方块构成的水下宫殿，鱼群在周围游弋，如梦似幻。',\n    imageUrl: 'https://placehold.co/800x600.png',\n    aiHint: 'minecraft underwater palace',\n    votes: 150,\n    size: '中型',\n    dimensions: { x: 70, y: 40, z: 60 },\n    territoryIdentifier: 'CrystalAbyss',\n    server: 'CreativeBuild',\n    coordinates: { x: 500, y: 40, z: -800 },\n    eventEdition: 24,\n    eventYear: 2024,\n    status: '审查中-被举报', // Changed status for testing\n    competitionId: 'comp2', // 2024夏季创意赛 (进行中)\n    submissionDate: '2024-06-10T10:00:00Z',\n    reportReason: 'This build appears to use world edit excessively beyond competition limits.',\n    lastReportedBy: 'some_reporter_uid',\n    lastReportDate: '2024-07-15T12:00:00Z',\n  },\n  {\n    id: '5',\n    name: '中世纪村庄',\n    author: '历史爱好者E',\n    authorSocialUid: 'user_E_social_uid',\n    description: '一个富有生活气息的中世纪村庄，有风车、市场、教堂和各种民居，仿佛时光倒流。',\n    imageUrl: 'https://placehold.co/800x600.png',\n    aiHint: 'minecraft village medieval',\n    votes: 60,\n    size: '中型',\n    dimensions: { x: 60, y: 25, z: 70 },\n    territoryIdentifier: 'MedievalHamlet',\n    server: 'Survival-1',\n    coordinates: { x: 50, y: 68, z: 600 },\n    eventEdition: 25, \n    eventYear: 2025,\n    status: '作弊',\n    competitionId: 'comp3', // 2025未来城市设计挑战 (策划中)\n    submissionDate: '2025-01-20T10:00:00Z',\n  },\n  {\n    id: '6',\n    name: '未来派空间站',\n    author: '科幻迷F',\n    authorSocialUid: 'user_F_social_uid',\n    description: ' orbiting a distant planet, this space station features advanced technology and sleek design.',\n    imageUrl: 'https://placehold.co/800x600.png',\n    aiHint: 'minecraft space station',\n    votes: 110,\n    size: '大型',\n    dimensions: { x: 90, y: 55, z: 90 },\n    territoryIdentifier: 'StarbaseOdyssey',\n    server: 'SciFi-Zone',\n    coordinates: { x: 0, y: 200, z: 0 },\n    eventEdition: 25,\n    eventYear: 2025,\n    status: '无效',\n    competitionId: 'comp3', // 2025未来城市设计挑战 (策划中)\n    submissionDate: '2025-02-01T10:00:00Z',\n  },\n  {\n    id: '7',\n    name: '温馨林间小屋',\n    author: '隐士G',\n    authorSocialUid: 'user_G_social_uid',\n    description: '一座小巧精致的林间小屋，周围环绕着鲜花和宁静的池塘。',\n    imageUrl: 'https://placehold.co/800x600.png',\n    aiHint: 'minecraft cabin forest',\n    votes: 165, \n    size: '小型',\n    dimensions: { x: 20, y: 15, z: 25 },\n    territoryIdentifier: 'ForestRetreat_7',\n    server: 'Survival-2',\n    coordinates: { x: -150, y: 72, z: -250 },\n    eventEdition: 24, \n    eventYear: 2024,\n    status: '有效',\n    competitionId: 'comp2', // 2024夏季创意赛 (进行中)\n    submissionDate: '2024-07-01T10:00:00Z',\n  },\n  {\n    id: '8',\n    name: '古堡魅影',\n    author: '建筑大师A',\n    authorSocialUid: 'user_A_social_uid', // Example of same user submitting another project\n    description: '一座矗立在悬崖边的古老城堡，夜晚时分更显神秘。',\n    imageUrl: 'https://placehold.co/800x600.png',\n    aiHint: 'minecraft castle cliff',\n    votes: 88,\n    size: '大型',\n    dimensions: { x: 90, y: 70, z: 80 },\n    territoryIdentifier: 'HauntedKeep',\n    server: 'Survival-1',\n    coordinates: { x: 321, y: 100, z: -567 },\n    eventEdition: 24,\n    eventYear: 2024,\n    status: '有效',\n    competitionId: 'comp4', // 中世纪幻想主题赛 (评审中)\n    submissionDate: '2024-03-10T10:00:00Z',\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/data/competitions.ts"],"sourcesContent":["\nimport type { Competition } from '@/types';\n\nexport const mockCompetitions: Competition[] = [\n  {\n    id: 'comp1',\n    name: '2023年度建筑节',\n    year: 2023,\n    status: '已结束',\n    startDate: '2023-01-01',\n    endDate: '2023-03-31',\n    description: '2023年度的盛大建筑活动，涌现了许多优秀作品。',\n  },\n  {\n    id: 'comp2',\n    name: '2024夏季创意赛',\n    year: 2024,\n    status: '进行中',\n    startDate: '2024-06-01',\n    endDate: '2024-08-31',\n    description: '以“清凉夏日”为主题，发挥无限创意，搭建梦想中的夏日乐园。',\n  },\n  {\n    id: 'comp3',\n    name: '2025未来城市设计挑战',\n    year: 2025,\n    status: '策划中',\n    startDate: '2025-01-15',\n    endDate: '2025-04-15',\n    description: '探索未来城市的可持续发展与创新建筑设计理念。',\n  },\n  {\n    id: 'comp4',\n    name: '中世纪幻想主题赛',\n    year: 2024,\n    status: '评审中',\n    startDate: '2024-03-01',\n    endDate: '2024-05-31',\n    description: '重现中世纪的城堡、村庄与神秘传说。',\n  },\n];\n"],"names":[],"mappings":";;;AAGO,MAAM,mBAAkC;IAC7C;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,aAAa;IACf;CACD","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport { APP_ID, APP_KEY, API_BASE_URL, SESSION_COOKIE_NAME } from '@/config';\nimport type { User, LoginUrlResponse, AuthCallbackResponse, Building, BuildingStatus, Competition, CompetitionStatus, BuildingSubmissionFormData, HistoricalCompetitionWithWorks } from '@/types';\nimport { mockBuildings } from '@/data/buildings';\nimport { mockCompetitions } from '@/data/competitions';\nimport { revalidatePath } from 'next/cache';\nimport { v4 as uuidv4 } from 'uuid'; // For generating unique IDs for new buildings\n\n// 模拟数据库或持久化存储\nlet serverBuildings = [...mockBuildings];\nconst userVotes: Record<string, Set<string>> = {}; // { userId: Set<buildingId> }\nlet serverCompetitions = [...mockCompetitions];\n\n\nexport async function handleLoginRedirect(providerType: string) {\n  const redirectUri = process.env.NODE_ENV === 'production' \n    ? 'YOUR_PRODUCTION_CALLBACK_URL' // TODO: Replace with actual production URL\n    : `http://localhost:${process.env.PORT || 9002}/auth/callback`;\n\n  const url = `${API_BASE_URL}/connect.php?act=login&appid=${APP_ID}&appkey=${APP_KEY}&type=${providerType}&redirect_uri=${encodeURIComponent(redirectUri)}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ msg: '获取登录链接失败，响应无效。' }));\n      console.error('Error fetching login URL:', errorData);\n      return { error: errorData.msg || '获取登录链接失败' };\n    }\n\n    const data: LoginUrlResponse = await response.json();\n\n    if (data.code === 0 && data.url) {\n      redirect(data.url);\n    } else {\n      console.error('Error in login URL response:', data);\n      return { error: data.msg || '获取登录链接时发生未知错误' };\n    }\n  } catch (error) {\n    console.error('Network error fetching login URL:', error);\n    return { error: '网络错误，无法连接到登录服务' };\n  }\n}\n\nexport async function processLoginCallback(type: string, code: string): Promise<{ success: boolean; error?: string }> {\n  const url = `${API_BASE_URL}/connect.php?act=callback&appid=${APP_ID}&appkey=${APP_KEY}&type=${type}&code=${code}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ msg: '处理回调失败，响应无效。' }));\n      console.error('Error fetching user info:', errorData);\n      return { success: false, error: errorData.msg || '处理回调失败' };\n    }\n\n    const data: AuthCallbackResponse = await response.json();\n\n    if (data.code === 0 && data.social_uid && data.nickname && data.faceimg) {\n      const user: User = {\n        socialUid: data.social_uid,\n        nickname: data.nickname,\n        faceimg: data.faceimg,\n        type: data.type || type,\n        accessToken: data.access_token,\n        gender: data.gender,\n        location: data.location,\n        ip: data.ip,\n      };\n      \n      cookies().set(SESSION_COOKIE_NAME, JSON.stringify(user), {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: 60 * 60 * 24 * 7, // 1 week\n        path: '/',\n      });\n      return { success: true };\n    } else if (data.code === 2) {\n      return { success: false, error: '登录未完成，请重试。' };\n    } \n    else {\n      console.error('Error in user info response:', data);\n      return { success: false, error: data.msg || '获取用户信息时发生未知错误' };\n    }\n  } catch (error) {\n    console.error('Network error fetching user info:', error);\n    return { success: false, error: '网络错误，无法获取用户信息' };\n  }\n}\n\nexport async function handleStaffLogin(\n  prevState: { error?: string } | undefined,\n  formData: FormData\n): Promise<{ error?: string } | void> {\n  const username = formData.get('username') as string;\n  const password = formData.get('password') as string;\n\n  if (username === 'admin' && password === '123456') {\n    const user: User = {\n      socialUid: `staff_${username.toLowerCase()}`,\n      nickname: '后台管理员 (STAFF)',\n      faceimg: 'https://placehold.co/100x100.png?text=S', \n      type: 'staff',\n    };\n\n    cookies().set(SESSION_COOKIE_NAME, JSON.stringify(user), {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 60 * 60 * 24 * 7, \n      path: '/',\n    });\n    redirect('/'); \n  } else {\n    return { error: '无效的员工帐户或密码。' };\n  }\n}\n\nexport async function handleLogout() {\n  cookies().delete(SESSION_COOKIE_NAME);\n  redirect('/');\n}\n\nexport async function getUserSession(): Promise<User | null> {\n  const sessionCookie = cookies().get(SESSION_COOKIE_NAME);\n  if (sessionCookie?.value) {\n    try {\n      return JSON.parse(sessionCookie.value) as User;\n    } catch (error) {\n      console.error('Error parsing session cookie:', error);\n      return null;\n    }\n  }\n  return null;\n}\n\nexport async function fetchUserSessionForClient(): Promise<User | null> {\n  return await getUserSession();\n}\n\nexport async function submitVote(buildingId: string): Promise<{ success: boolean; message: string; newVotes?: number }> {\n  const user = await getUserSession();\n  if (!user) {\n    return { success: false, message: '请先登录再投票！' };\n  }\n\n  const buildingIndex = serverBuildings.findIndex(b => b.id === buildingId);\n  if (buildingIndex === -1) {\n    return { success: false, message: '建筑不存在！' };\n  }\n\n  if (serverBuildings[buildingIndex].status !== '有效') {\n    return { success: false, message: '此作品当前状态无法投票。' };\n  }\n\n  if (!userVotes[user.socialUid]) {\n    userVotes[user.socialUid] = new Set();\n  }\n\n  const building = serverBuildings[buildingIndex];\n  const competitionId = building.competitionId;\n\n  if (userVotes[user.socialUid].has(buildingId)) {\n    building.votes -= 1;\n    userVotes[user.socialUid].delete(buildingId);\n    revalidatePath('/');\n    revalidatePath('/history');\n    revalidatePath(`/building/${buildingId}`);\n    revalidatePath('/dashboard/my-projects');\n    if (competitionId) revalidatePath(`/history/competition/${competitionId}`);\n    return { success: true, message: '取消投票成功！', newVotes: building.votes };\n  }\n\n  building.votes += 1;\n  userVotes[user.socialUid].add(buildingId);\n  \n  revalidatePath('/'); \n  revalidatePath('/history');\n  revalidatePath(`/building/${buildingId}`); \n  revalidatePath('/dashboard/my-projects');\n  if (competitionId) revalidatePath(`/history/competition/${competitionId}`);\n\n  return { success: true, message: '投票成功！', newVotes: building.votes };\n}\n\nexport async function getRawBuildings(currentUser?: User | null): Promise<Building[]> {\n  let userToCheck = currentUser;\n  if (currentUser === undefined) { \n      userToCheck = await getUserSession();\n  }\n\n  const sortedBuildings = [...serverBuildings].sort((a, b) => {\n    const dateA = a.submissionDate ? new Date(a.submissionDate).getTime() : 0;\n    const dateB = b.submissionDate ? new Date(b.submissionDate).getTime() : 0;\n    return dateB - dateA; // Newest first\n  });\n\n  return JSON.parse(JSON.stringify(sortedBuildings.map(b => {\n    const buildingCopy = {...b};\n    if (userToCheck && userVotes[userToCheck.socialUid]) {\n      buildingCopy.currentUserHasVoted = userVotes[userToCheck.socialUid].has(b.id);\n    } else {\n      buildingCopy.currentUserHasVoted = false;\n    }\n    return buildingCopy;\n  })));\n}\n\n\nexport async function getBuildingById(id: string, currentUser?: User | null): Promise<Building | undefined> {\n  let userToCheck = currentUser;\n  if (currentUser === undefined) { \n    userToCheck = await getUserSession();\n  }\n  const building = serverBuildings.find(b => b.id === id);\n  if (building) {\n    const buildingCopy = JSON.parse(JSON.stringify(building)); \n    if (userToCheck && userVotes[userToCheck.socialUid] && userVotes[userToCheck.socialUid].has(id)) { \n      buildingCopy.currentUserHasVoted = true;\n    } else {\n      buildingCopy.currentUserHasVoted = false;\n    }\n    return buildingCopy;\n  }\n  return undefined;\n}\n\nexport async function getActiveWorks(currentUser?: User | null): Promise<Building[]> {\n  let userToCheck = currentUser;\n  if (currentUser === undefined) {\n    userToCheck = await getUserSession();\n  }\n  const competitions = await getCompetitions();\n  const activeCompetitionIds = competitions\n    .filter(comp => comp.status === '进行中')\n    .map(comp => comp.id);\n\n  const allBuildings = await getRawBuildings(userToCheck); \n\n  const activeWorks = allBuildings\n    .filter(building => \n      building.competitionId && \n      activeCompetitionIds.includes(building.competitionId) &&\n      building.status === '有效'\n    )\n    .sort((a, b) => b.votes - a.votes);\n  \n  return activeWorks;\n}\n\n\nexport async function getHistoricalCompetitions(): Promise<Competition[]> {\n  const allCompetitions = await getCompetitions();\n  const historicalCompetitions = allCompetitions\n    .filter(comp => comp.status !== '进行中') \n    .sort((a, b) => {\n      if (b.year !== a.year) return b.year - a.year;\n      const dateA = new Date(a.startDate).getTime();\n      const dateB = new Date(b.startDate).getTime();\n      if (dateB !== dateA) return dateB - dateA; \n      return a.name.localeCompare(b.name); \n    });\n  return JSON.parse(JSON.stringify(historicalCompetitions));\n}\n\nexport async function getCompetitionWithWorks(competitionId: string, currentUser?: User | null): Promise<HistoricalCompetitionWithWorks | undefined> {\n  let userToCheck = currentUser;\n   if (currentUser === undefined) { \n    userToCheck = await getUserSession();\n  }\n\n  const competition = serverCompetitions.find(c => c.id === competitionId);\n  if (!competition) { \n    return undefined;\n  }\n\n  const allBuildings = await getRawBuildings(userToCheck); \n\n  \n  const worksForCompetition = allBuildings\n    .filter(building => building.competitionId === competitionId) \n    .sort((wa, wb) => wb.votes - wa.votes); \n\n  return JSON.parse(JSON.stringify({ \n    ...competition,\n    works: worksForCompetition,\n  }));\n}\n\n\nexport async function updateBuildingStatus(buildingId: string, newStatus: BuildingStatus): Promise<{ success: boolean; message: string }> {\n  const buildingIndex = serverBuildings.findIndex(b => b.id === buildingId);\n  if (buildingIndex === -1) {\n    return { success: false, message: '建筑不存在！' };\n  }\n  const oldCompetitionId = serverBuildings[buildingIndex].competitionId;\n\n  serverBuildings[buildingIndex].status = newStatus;\n  \n  if (newStatus !== '审查中-被举报') {\n    serverBuildings[buildingIndex].reportReason = undefined;\n    serverBuildings[buildingIndex].lastReportedBy = undefined;\n    serverBuildings[buildingIndex].lastReportDate = undefined;\n  }\n  \n  revalidatePath('/'); \n  revalidatePath('/history');\n  revalidatePath('/admin');\n  revalidatePath(`/building/${buildingId}`);\n  revalidatePath('/dashboard/my-projects');\n  if (oldCompetitionId) {\n    revalidatePath(`/history/competition/${oldCompetitionId}`);\n  }\n\n\n  return { success: true, message: `作品 \"${serverBuildings[buildingIndex].name}\" 状态已更新为 \"${newStatus}\"。` };\n}\n\nexport async function deleteBuildingAction(buildingId: string): Promise<{ success: boolean; message: string }> {\n  const currentUser = await getUserSession();\n  if (!currentUser || currentUser.type !== 'staff') {\n    return { success: false, message: '只有管理员才能删除作品。' };\n  }\n\n  const buildingIndex = serverBuildings.findIndex(b => b.id === buildingId);\n  if (buildingIndex === -1) {\n    return { success: false, message: '要删除的作品不存在。' };\n  }\n  \n  const buildingName = serverBuildings[buildingIndex].name;\n  const competitionId = serverBuildings[buildingIndex].competitionId;\n  serverBuildings.splice(buildingIndex, 1);\n\n  revalidatePath('/'); \n  revalidatePath('/history');\n  revalidatePath('/admin');\n  // Note: Revalidating a deleted building's detail page might not be necessary or could lead to 404, which is fine.\n  // revalidatePath(`/building/${buildingId}`); \n  revalidatePath('/dashboard/my-projects'); // If an admin deletes a work they submitted\n  if (competitionId) {\n    revalidatePath(`/history/competition/${competitionId}`);\n  }\n  \n  return { success: true, message: `作品 \"${buildingName}\" 已成功删除。` };\n}\n\n\nexport async function getCompetitions(): Promise<Competition[]> {\n  \n  const sortedCompetitions = [...serverCompetitions].sort((a, b) => {\n    if (b.year !== a.year) {\n      return b.year - a.year;\n    }\n    return new Date(b.startDate).getTime() - new Date(a.startDate).getTime();\n  });\n  return JSON.parse(JSON.stringify(sortedCompetitions));\n}\n\nexport async function getSubmittableCompetitions(): Promise<Competition[]> {\n  const allComps = await getCompetitions(); \n  return allComps.filter(c => c.status === '进行中' || c.status === '策划中');\n}\n\n\nexport async function createCompetition(\n  competitionData: Omit<Competition, 'id' | 'startDate' | 'endDate'> & { startDate: string; endDate: string; }\n): Promise<{ success: boolean; message: string; competition?: Competition }> {\n  if (!competitionData.name || !competitionData.year) {\n    return { success: false, message: '比赛名称和年份不能为空。' };\n  }\n  const newId = `comp${serverCompetitions.length + 1}_${Date.now()}`;\n  const newCompetition: Competition = {\n    id: newId,\n    name: competitionData.name,\n    year: competitionData.year,\n    status: competitionData.status,\n    startDate: competitionData.startDate,\n    endDate: competitionData.endDate,\n    description: competitionData.description,\n  };\n  serverCompetitions.unshift(newCompetition); \n  revalidatePath('/admin');\n  revalidatePath('/');\n  revalidatePath('/history');\n  revalidatePath('/dashboard/submit'); \n  return { success: true, message: '比赛创建成功！', competition: newCompetition };\n}\n\nexport async function updateCompetition(\n  competitionId: string,\n  competitionData: Partial<Omit<Competition, 'id' | 'startDate' | 'endDate'>> & { startDate?: string; endDate?: string; }\n): Promise<{ success: boolean; message: string; competition?: Competition }> {\n  const competitionIndex = serverCompetitions.findIndex(c => c.id === competitionId);\n  if (competitionIndex === -1) {\n    return { success: false, message: '比赛不存在！' };\n  }\n  serverCompetitions[competitionIndex] = {\n    ...serverCompetitions[competitionIndex],\n    ...competitionData,\n    ...(competitionData.startDate && { startDate: competitionData.startDate }),\n    ...(competitionData.endDate && { endDate: competitionData.endDate }),\n  };\n  revalidatePath('/admin');\n  revalidatePath('/');\n  revalidatePath('/history');\n  revalidatePath(`/history/competition/${competitionId}`);\n  revalidatePath('/dashboard/submit');\n  return { success: true, message: '比赛更新成功！', competition: serverCompetitions[competitionIndex] };\n}\n\nexport async function deleteCompetition(\n  competitionId: string\n): Promise<{ success: boolean; message: string }> {\n   const currentUser = await getUserSession();\n  if (!currentUser || currentUser.type !== 'staff') {\n    return { success: false, message: '只有管理员才能删除比赛。' };\n  }\n  const initialLength = serverCompetitions.length;\n  serverCompetitions = serverCompetitions.filter(c => c.id !== competitionId);\n  if (serverCompetitions.length === initialLength) {\n    return { success: false, message: '比赛不存在或删除失败！' };\n  }\n  revalidatePath('/admin');\n  revalidatePath('/');\n  revalidatePath('/history');\n  revalidatePath(`/history/competition/${competitionId}`); \n  revalidatePath('/dashboard/submit');\n  return { success: true, message: '比赛删除成功！' };\n}\n\n\nexport async function submitNewBuilding(\n  formData: BuildingSubmissionFormData\n): Promise<{ success: boolean; message: string; buildingId?: string }> {\n  const currentUser = await getUserSession();\n  if (!currentUser) {\n    return { success: false, message: '请先登录才能提交作品。' };\n  }\n\n  const competition = serverCompetitions.find(c => c.id === formData.competitionId);\n  if (!competition) {\n    return { success: false, message: '选择的比赛无效。' };\n  }\n   if (competition.status !== '进行中' && competition.status !== '策划中') {\n    return { success: false, message: `无法向状态为 \"${competition.status}\" 的比赛提交作品。` };\n  }\n\n  const newBuilding: Building = {\n    id: uuidv4(), \n    name: formData.name,\n    author: currentUser.nickname,\n    authorSocialUid: currentUser.socialUid,\n    description: formData.description,\n    imageUrl: formData.imageUrl || `https://placehold.co/800x600.png?text=${encodeURIComponent(formData.name)}`,\n    aiHint: formData.aiHint,\n    votes: 0,\n    size: formData.size,\n    territoryIdentifier: formData.territoryIdentifier,\n    server: formData.server,\n    coordinates: {\n      x: formData.coordinateX,\n      y: formData.coordinateY,\n      z: formData.coordinateZ,\n    },\n    eventEdition: competition.year, \n    eventYear: competition.year,\n    status: '等待审核', \n    competitionId: formData.competitionId,\n    submissionDate: new Date().toISOString(),\n  };\n\n  serverBuildings.unshift(newBuilding); \n\n  revalidatePath('/');\n  revalidatePath('/history');\n  revalidatePath(`/history/competition/${formData.competitionId}`);\n  revalidatePath('/admin'); \n  revalidatePath('/dashboard/my-projects');\n\n  return { success: true, message: '作品提交成功，状态为等待审核。', buildingId: newBuilding.id };\n}\n\nexport async function getUserSubmittedWorks(currentUser?: User | null): Promise<Building[]> {\n  let userToCheck = currentUser;\n  if (currentUser === undefined) { \n    userToCheck = await getUserSession();\n  }\n  if (!userToCheck) {\n    return [];\n  }\n\n  const allBuildings = await getRawBuildings(userToCheck); \n\n  const userWorks = allBuildings\n    .filter(building => building.authorSocialUid === userToCheck!.socialUid)\n    .sort((a, b) => { \n        const dateA = a.submissionDate ? new Date(a.submissionDate).getTime() : 0;\n        const dateB = b.submissionDate ? new Date(b.submissionDate).getTime() : 0;\n        return dateB - dateA;\n    });\n    \n  return userWorks;\n}\n\n\nexport async function getBuildingsByCompetitionId(competitionId: string, currentUser?: User | null): Promise<Building[]> {\n  let userToCheck = currentUser;\n  if (currentUser === undefined) { \n    userToCheck = await getUserSession();\n  }\n  \n  const allBuildings = await getRawBuildings(userToCheck);\n\n  return allBuildings\n    .filter(building => building.competitionId === competitionId)\n    .sort((a, b) => b.votes - a.votes); \n}\n\nexport async function reportBuildingAction(buildingId: string, reason: string): Promise<{ success: boolean; message: string }> {\n  const currentUser = await getUserSession();\n  if (!currentUser) {\n    return { success: false, message: '请先登录才能举报作品。' };\n  }\n  if (!reason || reason.trim().length < 10) {\n    return { success: false, message: '举报原因不能为空，且至少需要10个字符。' };\n  }\n\n\n  const buildingIndex = serverBuildings.findIndex(b => b.id === buildingId);\n  if (buildingIndex === -1) {\n    return { success: false, message: '要举报的作品不存在。' };\n  }\n\n  const building = serverBuildings[buildingIndex];\n  \n  if (building.status === '审查中-被举报' || building.status === '违规' || building.status === '作弊' || building.status === '无效') {\n    return { success: false, message: `作品 \"${building.name}\" 当前状态 (${building.status}) 无法重复举报或已处理。` };\n  }\n  \n  const oldStatus = building.status;\n  serverBuildings[buildingIndex].status = '审查中-被举报';\n  serverBuildings[buildingIndex].reportReason = reason;\n  serverBuildings[buildingIndex].lastReportedBy = currentUser.socialUid;\n  serverBuildings[buildingIndex].lastReportDate = new Date().toISOString();\n\n  \n  console.log(`[举报模拟] 作品 \"${building.name}\" (ID: ${building.id}) 已被用户 ${currentUser.nickname} (ID: ${currentUser.socialUid}) 举报。原状态: ${oldStatus}, 作者: ${building.author} (ID: ${building.authorSocialUid})。原因: ${reason}`);\n\n  \n  revalidatePath('/');\n  revalidatePath('/history');\n  if (building.competitionId) revalidatePath(`/history/competition/${building.competitionId}`);\n  revalidatePath(`/building/${building.id}`);\n  revalidatePath('/admin'); \n  if (building.authorSocialUid === currentUser.socialUid) { \n    revalidatePath('/dashboard/my-projects');\n  }\n\n\n  return { success: true, message: `作品 \"${building.name}\" 已举报成功，等待管理员审核。` };\n}\n\nexport async function dismissReportAction(buildingId: string): Promise<{ success: boolean; message: string }> {\n  const currentUser = await getUserSession();\n  if (!currentUser || currentUser.type !== 'staff') {\n    return { success: false, message: '只有管理员才能执行此操作。' };\n  }\n\n  const buildingIndex = serverBuildings.findIndex(b => b.id === buildingId);\n  if (buildingIndex === -1) {\n    return { success: false, message: '作品不存在。' };\n  }\n\n  const building = serverBuildings[buildingIndex];\n  if (building.status !== '审查中-被举报') {\n    return { success: false, message: `作品 \"${building.name}\" 当前不处于“审查中-被举报”状态。` };\n  }\n\n  \n  serverBuildings[buildingIndex].status = '有效'; \n  serverBuildings[buildingIndex].reportReason = undefined;\n  serverBuildings[buildingIndex].lastReportedBy = undefined;\n  serverBuildings[buildingIndex].lastReportDate = undefined;\n  \n  const affectedBuilding = serverBuildings[buildingIndex];\n\n  \n  revalidatePath('/');\n  revalidatePath('/history');\n  if (affectedBuilding.competitionId) revalidatePath(`/history/competition/${affectedBuilding.competitionId}`);\n  revalidatePath(`/building/${affectedBuilding.id}`);\n  revalidatePath('/admin'); \n  revalidatePath('/dashboard/my-projects'); \n\n  return { success: true, message: `作品 \"${affectedBuilding.name}\" 的举报已被撤销，状态已恢复为“有效”。` };\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1022, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vote-analysis/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/vote-analysis/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/vote-analysis/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 1162, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vote-analysis/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/vote-analysis/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/vote-analysis/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 1176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}